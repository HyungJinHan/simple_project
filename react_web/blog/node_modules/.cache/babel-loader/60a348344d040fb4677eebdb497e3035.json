{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bitnami\\\\wampstack-8.1.5-0\\\\apache2\\\\htdocs\\\\just_make\\\\simple_project\\\\react_web\\\\blog\\\\src\\\\App.js\";\n\n/* eslint-disable */\nimport React, { useState } from 'react'; // React의 내장 함수인 useState를 Import함\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Header(props) {\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"black_h1\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        onClick: function (event) {\n          event.preventDefault(); // click 후의 새로고침이 되지 않도록 막음\n        },\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Header;\n\nfunction Nav(props) {\n  const lists = []; // lists라는 변수를 배열로 지정\n\n  for (let i = 0; i < props.topics.length; i++) {\n    let t = props.topics[i];\n    lists.push( /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: '/read/' + t.id,\n        children: t.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 31\n      }, this)\n    }, t.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this));\n  } // for 문을 이용해 list들을 생성해주고, lists의 배열에 push해주는 작업을\n  // topics라는 변수의 배열만큼 반복시켜줌\n  // react는 자동으로 생성되는 경우에는 고유의 key 값을 지정해줘서 추적이 가능하게 해야 함\n\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"lists\",\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: lists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Nav;\n\nfunction Article(props) {\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"articles\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), props.body1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 20\n    }, this), props.body2]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n} // Main\n\n\n_c3 = Article;\n\nfunction App() {\n  const topics = [{\n    id: 1,\n    title: 'velog를 사용할까?',\n    body: 'velog의 장점과 단점'\n  }, {\n    id: 2,\n    title: 'Tistory를 사용할까?',\n    body: 'Tistory의 장점과 단점'\n  }, {\n    id: 3,\n    title: 'GitHub Blog를 사용할까?',\n    body: 'GitHub Blog의 장점과 단점'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"\\uAC1C\\uBC1C\\uC790 Blog \\uCD94\\uCC9C\",\n      onChangeMode: function () {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Nav, {\n      topics: topics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Article, {\n      title: \"\\uAC1C\\uBC1C\\uC790 Blog\\uB97C \\uC2DC\\uC791\\uD558\\uB824\\uB294 \\uBAA8\\uB450\\uB97C \\uC704\\uD574...\",\n      body1: \"\\uC5B4\\uB5A4 \\uD50C\\uB7AB\\uD3FC\\uC744 \\uC0AC\\uC6A9\\uD574\\uC57C \\uD558\\uB294\\uC9C0\\uC758 \\uB098\\uB984\\uB300\\uB85C\\uC758 \\uC815\\uBCF4\\uB4E4\\uC744 \\uC815\\uB9AC\\uD574\\uB193\\uC740 \\uBE14\\uB85C\\uADF8.\",\n      body2: \"\\uAC01\\uAC01\\uC758 \\uD50C\\uB7AB\\uD3FC\\uC758 \\uC7A5\\uC810\\uACFC \\uB2E8\\uC810\\uC744 \\uC815\\uB9AC\\uD588\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Nav\");\n$RefreshReg$(_c3, \"Article\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","logo","Header","props","event","preventDefault","title","Nav","lists","i","topics","length","t","push","id","Article","body1","body2","App","body"],"sources":["C:/Bitnami/wampstack-8.1.5-0/apache2/htdocs/just_make/simple_project/react_web/blog/src/App.js"],"sourcesContent":["/* eslint-disable */\nimport React, {useState} from 'react';\n// React의 내장 함수인 useState를 Import함\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction Header(props) {\n  return (\n    <header className='black_h1'>\n      <h1>\n        <a href=\"/\" onClick={function(event) {\n          event.preventDefault();\n          // click 후의 새로고침이 되지 않도록 막음\n        }}>\n         {props.title}\n        </a>\n      </h1>\n    </header>\n  );\n}\n\nfunction Nav(props) {\n  const lists = []\n  // lists라는 변수를 배열로 지정\n\n  for(let i = 0; i < props.topics.length; i++) {\n    let t = props.topics[i];\n    lists.push(<li key={t.id}><a href={'/read/'+t.id}>{t.title}</a></li>);\n  }\n  // for 문을 이용해 list들을 생성해주고, lists의 배열에 push해주는 작업을\n  // topics라는 변수의 배열만큼 반복시켜줌\n  // react는 자동으로 생성되는 경우에는 고유의 key 값을 지정해줘서 추적이 가능하게 해야 함\n\n  return (\n    <nav className='lists'>\n      <ol>\n        {lists}\n      </ol>\n    </nav>\n  );\n}\n\nfunction Article(props) {\n  return (\n    <article className='articles'>\n      <h2>\n        {props.title}\n      </h2>\n      {props.body1}<br/>\n      {props.body2}\n    </article>\n  ); \n}\n\n// Main\nfunction App() {\n  const topics = [\n    { id: 1, title: 'velog를 사용할까?', body: 'velog의 장점과 단점'},\n    { id: 2, title: 'Tistory를 사용할까?', body: 'Tistory의 장점과 단점' },\n    { id: 3, title: 'GitHub Blog를 사용할까?', body: 'GitHub Blog의 장점과 단점' }\n  ]\n\n  return (\n    <div>\n      <Header title=\"개발자 Blog 추천\" onChangeMode={function() {\n        \n      }}></Header>\n      <Nav topics={topics}></Nav>\n      <Article\n      title=\"개발자 Blog를 시작하려는 모두를 위해...\"\n      body1=\"어떤 플랫폼을 사용해야 하는지의 나름대로의 정보들을 정리해놓은 블로그.\"\n      body2=\"각각의 플랫폼의 장점과 단점을 정리했습니다.\"\n      >\n      </Article>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CACA;;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;EACrB,oBACE;IAAQ,SAAS,EAAC,UAAlB;IAAA,uBACE;MAAA,uBACE;QAAG,IAAI,EAAC,GAAR;QAAY,OAAO,EAAE,UAASC,KAAT,EAAgB;UACnCA,KAAK,CAACC,cAAN,GADmC,CAEnC;QACD,CAHD;QAAA,UAIEF,KAAK,CAACG;MAJR;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;KAbQJ,M;;AAeT,SAASK,GAAT,CAAaJ,KAAb,EAAoB;EAClB,MAAMK,KAAK,GAAG,EAAd,CADkB,CAElB;;EAEA,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,KAAK,CAACO,MAAN,CAAaC,MAAhC,EAAwCF,CAAC,EAAzC,EAA6C;IAC3C,IAAIG,CAAC,GAAGT,KAAK,CAACO,MAAN,CAAaD,CAAb,CAAR;IACAD,KAAK,CAACK,IAAN,eAAW;MAAA,uBAAe;QAAG,IAAI,EAAE,WAASD,CAAC,CAACE,EAApB;QAAA,UAAyBF,CAAC,CAACN;MAA3B;QAAA;QAAA;QAAA;MAAA;IAAf,GAASM,CAAC,CAACE,EAAX;MAAA;MAAA;MAAA;IAAA,QAAX;EACD,CAPiB,CAQlB;EACA;EACA;;;EAEA,oBACE;IAAK,SAAS,EAAC,OAAf;IAAA,uBACE;MAAA,UACGN;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;MAnBQD,G;;AAqBT,SAASQ,OAAT,CAAiBZ,KAAjB,EAAwB;EACtB,oBACE;IAAS,SAAS,EAAC,UAAnB;IAAA,wBACE;MAAA,UACGA,KAAK,CAACG;IADT;MAAA;MAAA;MAAA;IAAA,QADF,EAIGH,KAAK,CAACa,KAJT,eAIe;MAAA;MAAA;MAAA;IAAA,QAJf,EAKGb,KAAK,CAACc,KALT;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,C,CAED;;;MAZSF,O;;AAaT,SAASG,GAAT,GAAe;EACb,MAAMR,MAAM,GAAG,CACb;IAAEI,EAAE,EAAE,CAAN;IAASR,KAAK,EAAE,cAAhB;IAAgCa,IAAI,EAAE;EAAtC,CADa,EAEb;IAAEL,EAAE,EAAE,CAAN;IAASR,KAAK,EAAE,gBAAhB;IAAkCa,IAAI,EAAE;EAAxC,CAFa,EAGb;IAAEL,EAAE,EAAE,CAAN;IAASR,KAAK,EAAE,oBAAhB;IAAsCa,IAAI,EAAE;EAA5C,CAHa,CAAf;EAMA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,KAAK,EAAC,sCAAd;MAA4B,YAAY,EAAE,YAAW,CAEpD;IAFD;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,GAAD;MAAK,MAAM,EAAET;IAAb;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE,QAAC,OAAD;MACA,KAAK,EAAC,iGADN;MAEA,KAAK,EAAC,oMAFN;MAGA,KAAK,EAAC;IAHN;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;MArBQQ,G;AAuBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}